{"version":3,"sources":["components/form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","floor","random","name","Todo","todo","map","item","filter","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10b79404.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form=({setInputText,todos,setTodos,inputText,setStatus})=>{\r\n  //javascipt Code\r\n  const inputTextHandler=(e)=>{\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const submitTodoHandler=(e)=>{\r\n    e.preventDefault();\r\n    setTodos([...todos,{text:inputText,completed:false,id:Math.floor(Math.random()*1000)}\r\n    ]);\r\n    setInputText(\"\");\r\n  };\r\n  const statusHandler=(e)=>{\r\n   setStatus(e.target.value);\r\n  }\r\n    return(\r\n        <form>\r\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n\r\n    );\r\n}\r\nexport default Form;","import React from \"react\";\r\n\r\nconst Todo=({text,todo,todos,setTodos})=>{\r\n\r\n    //Events\r\n    const deleteHandler=()=>{\r\n        setTodos(todos.filter((item)=>item.id!==todo.id))\r\n    }\r\n   const completeHandler=()=>{\r\n       setTodos(todos.map(item=>{\r\n           if(item.id===todo.id){\r\n               return{\r\n                   ...item,completed: !item.completed\r\n               }\r\n           }\r\n           return item;\r\n       }))\r\n   }\r\n    return(\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"></i> </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i> </button>\r\n           \r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Todo;","import React from \"react\";\r\n\r\n//Import Component\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = ({todos,setTodos,filteredTodos}) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map((todo)=>(\r\n         <Todo setTodos={setTodos} todos={todos} key={todo.id} todo={todo} text={todo.text}/>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default TodoList;","import React, {useState,useEffect} from 'react';\nimport './App.css';\n\n//Importing Components\nimport Form from './components/form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  //ALL States\n  const [inputText,setInputText]=useState(\"\");\n  const [todos,setTodos]=useState([]);\n  const [status,setStatus]=useState(\"all\");\n  const [filteredTodos,setFilteredTodos]=useState([]);\n\n  \n// Run once when the app start\nuseEffect(()=>{\n  getLocalTodos();\n},[]);\n\n  //Use Effect\n  useEffect(()=>{\n  filterHandler();\n  saveLocalTodos();\n  },[todos,status]);\n  \n\n//Functions and Events\nconst filterHandler=()=>{\n  switch(status){\n    case 'completed':\n      setFilteredTodos(todos.filter(todo=>todo.completed===true))\n      break;\n      case 'uncompleted':\n      setFilteredTodos(todos.filter(todo=>todo.completed===false))\n      break;\n      default:\n        setFilteredTodos(todos);\n        break;\n  }\n}\n//Save to Local\nconst saveLocalTodos=()=>{\n  localStorage.setItem(\"todos\",JSON.stringify(todos));\n\n};\nconst getLocalTodos=()=>{\n  if(localStorage.getItem(\"todos\")===null){\n    localStorage.setItem(\"todos\",JSON.stringify([]));\n  }else{\n    let todoLocal=JSON.parse(localStorage.getItem(\"todos\"));\n    setTodos(todoLocal);\n  }\n};\n//End of local storage\n  return (\n    <div className=\"App\">\n     <header>\n       <h1>Todo List</h1>\n     </header>\n     <Form \n      inputText={inputText}\n      todos={todos} \n      setTodos={setTodos} \n      setInputText={setInputText}\n      setStatus={setStatus}\n      \n      />\n    <TodoList filteredTodos={filteredTodos} setTodos={setTodos} todos={todos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}